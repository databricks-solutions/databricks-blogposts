{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 27,
  "lineage": "ceb1990a-6711-ce70-8bd3-380b6bea59ff",
  "outputs": {
    "deployment_summary": {
      "value": {
        "managed_identities": {
          "dev": "dabs-cicd-project-dev-identity",
          "prod": "dabs-cicd-project-prod-identity",
          "test": "dabs-cicd-project-test-identity"
        },
        "pipeline_file": "azure-pipelines.yml",
        "pipeline_name": "DAB-CI-Pipeline",
        "project_name": "dabs-cicd-project",
        "service_connections": {
          "dev": "dabs-cicd-project-Dev-Connection",
          "prod": "dabs-cicd-project-Prod-Connection",
          "test": "dabs-cicd-project-Test-Connection"
        },
        "variable_groups": {
          "dev": "DAB-CI-Pipeline-Dev-Variables",
          "prod": "DAB-CI-Pipeline-Prod-Variables",
          "test": "DAB-CI-Pipeline-Test-Variables"
        }
      },
      "type": [
        "object",
        {
          "managed_identities": [
            "object",
            {
              "dev": "string",
              "prod": "string",
              "test": "string"
            }
          ],
          "pipeline_file": "string",
          "pipeline_name": "string",
          "project_name": "string",
          "service_connections": [
            "object",
            {
              "dev": "string",
              "prod": "string",
              "test": "string"
            }
          ],
          "variable_groups": [
            "object",
            {
              "dev": "string",
              "prod": "string",
              "test": "string"
            }
          ]
        }
      ]
    },
    "dev_managed_identity_name": {
      "value": "dabs-cicd-project-dev-identity",
      "type": "string"
    },
    "dev_service_connection_name": {
      "value": "dabs-cicd-project-Dev-Connection",
      "type": "string"
    },
    "dev_variable_group_name": {
      "value": "DAB-CI-Pipeline-Dev-Variables",
      "type": "string"
    },
    "pipeline_file_path": {
      "value": "azure-pipelines.yml",
      "type": "string"
    },
    "pipeline_id": {
      "value": "7",
      "type": "string"
    },
    "pipeline_url": {
      "value": "https://dev.azure.com/zachjacobson/dabs-cicd-project/_build?definitionId=7",
      "type": "string"
    },
    "prod_managed_identity_name": {
      "value": "dabs-cicd-project-prod-identity",
      "type": "string"
    },
    "prod_service_connection_name": {
      "value": "dabs-cicd-project-Prod-Connection",
      "type": "string"
    },
    "prod_variable_group_name": {
      "value": "DAB-CI-Pipeline-Prod-Variables",
      "type": "string"
    },
    "project_id": {
      "value": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
      "type": "string"
    },
    "readme_file": {
      "value": "README.md",
      "type": "string"
    },
    "repository_clone_url": {
      "value": "https://zachjacobson@dev.azure.com/zachjacobson/dabs-cicd-project/_git/dabs-cicd-project",
      "type": "string"
    },
    "repository_id": {
      "value": "8fa490cc-afc1-4f6b-8056-46a97f4e0b1a",
      "type": "string"
    },
    "test_managed_identity_name": {
      "value": "dabs-cicd-project-test-identity",
      "type": "string"
    },
    "test_service_connection_name": {
      "value": "dabs-cicd-project-Test-Connection",
      "type": "string"
    },
    "test_variable_group_name": {
      "value": "DAB-CI-Pipeline-Test-Variables",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "azuredevops_git_repository",
      "name": "default_repo",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "default_branch": "",
            "disabled": false,
            "id": "8fa490cc-afc1-4f6b-8056-46a97f4e0b1a",
            "is_fork": false,
            "name": "dabs-cicd-project",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "remote_url": "https://zachjacobson@dev.azure.com/zachjacobson/dabs-cicd-project/_git/dabs-cicd-project",
            "size": 0,
            "ssh_url": "git@ssh.dev.azure.com:v3/zachjacobson/dabs-cicd-project/dabs-cicd-project",
            "timeouts": null,
            "url": "https://dev.azure.com/zachjacobson/2d37a48f-9d08-4b47-81d0-7b8d4c675388/_apis/git/repositories/8fa490cc-afc1-4f6b-8056-46a97f4e0b1a",
            "web_url": "https://dev.azure.com/zachjacobson/dabs-cicd-project/_git/dabs-cicd-project"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "azurerm_client_config",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_id": "04b07795-8ddb-461a-bbee-02f9e1bf7b46",
            "id": "Y2xpZW50Q29uZmlncy9jbGllbnRJZD0wNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDY7b2JqZWN0SWQ9ZjAyYTExNDEtMWFjZi00ZGI1LWEzNDMtYjk5YWFlNmJmZjQyO3N1YnNjcmlwdGlvbklkPWVkZDRjYzQ1LTg1YzctNGFlYy04YmY1LTY0ODA2MmQ1MTliZjt0ZW5hbnRJZD1iZjQ2NWRjNy0zYmM4LTQ5NDQtYjAxOC0wOTI1NzJiNWMyMGQ=",
            "object_id": "f02a1141-1acf-4db5-a343-b99aae6bff42",
            "subscription_id": "edd4cc45-85c7-4aec-8bf5-648062d519bf",
            "tenant_id": "bf465dc7-3bc8-4944-b018-092572b5c20d",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "azurerm_resource_group",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg",
            "location": "eastus2",
            "managed_by": "",
            "name": "databricks-mfg-central-rg",
            "tags": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_build_definition",
      "name": "pipeline",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "agent_pool_name": "Azure Pipelines",
            "agent_specification": null,
            "build_completion_trigger": [],
            "ci_trigger": [
              {
                "override": [],
                "use_yaml": true
              }
            ],
            "features": [],
            "id": "7",
            "job_authorization_scope": "projectCollection",
            "jobs": [],
            "name": "DAB-CI-Pipeline",
            "path": "\\",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "pull_request_trigger": [],
            "queue_status": "enabled",
            "repository": [
              {
                "branch_name": "refs/heads/main",
                "github_enterprise_url": "",
                "repo_id": "8fa490cc-afc1-4f6b-8056-46a97f4e0b1a",
                "repo_type": "TfsGit",
                "report_build_status": true,
                "service_connection_id": "",
                "url": "https://dev.azure.com/zachjacobson/dabs-cicd-project/_git/dabs-cicd-project",
                "yml_path": "azure-pipelines.yml"
              }
            ],
            "revision": 1,
            "schedules": [],
            "timeouts": null,
            "variable": [],
            "variable_groups": [
              11,
              12,
              13
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azuredevops_git_repository_file.azure_pipeline_yml",
            "azuredevops_project.project",
            "azuredevops_variable_group.dev_variables",
            "azuredevops_variable_group.prod_variables",
            "azuredevops_variable_group.test_variables",
            "data.azuredevops_git_repository.default_repo",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_git_repository_file",
      "name": "azure_pipeline_yml",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "author_email": "zach.jacobson@databricks.com",
            "author_name": "Zachary Jacobson",
            "branch": "refs/heads/main",
            "commit_message": "Add DAB CI/CD pipeline configuration via Terraform",
            "committer_email": "zach.jacobson@databricks.com",
            "committer_name": "Zachary Jacobson",
            "content": "trigger:\n  batch: false\n  branches:\n    include:\n    - dev\n    - test\n    - main\n  paths:\n    exclude:\n      - README.md\n      - LICENSE\n      - .github\n\npr:\n  branches:\n    include:\n    - '*'\n  paths:\n    exclude:\n      - README.md\n      - LICENSE\n      - .github\n\nvariables:\n  # Dynamic variable group selection based on target branch for PRs and source branch for pushes\n  \n  # For Pull Requests: Use target branch to determine variable group\n  - ${{ if and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/main')) }}:\n    - group: DAB-CI-Pipeline-Prod-Variables\n  - ${{ if and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/test')) }}:\n    - group: DAB-CI-Pipeline-Test-Variables\n  - ${{ if and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/dev')) }}:\n    - group: DAB-CI-Pipeline-Dev-Variables\n  - ${{ if and(eq(variables['Build.Reason'], 'PullRequest'), not(or(eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/main'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/test'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/dev')))) }}:\n    - group: DAB-CI-Pipeline-Dev-Variables\n  \n  # For Direct Pushes: Use source branch to determine variable group\n  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'main')) }}:\n    - group: DAB-CI-Pipeline-Prod-Variables\n  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'test')) }}:\n    - group: DAB-CI-Pipeline-Test-Variables\n  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'dev')) }}:\n    - group: DAB-CI-Pipeline-Dev-Variables\n  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), not(or(eq(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.SourceBranchName'], 'test'), eq(variables['Build.SourceBranchName'], 'dev')))) }}:\n    - group: DAB-CI-Pipeline-Dev-Variables\n\nstages:\n# Stage 1: Detect changed DAB folders\n- stage: DetectChanges\n  jobs:\n  - job: DetectChangedDABs\n    pool:\n      vmImage: 'ubuntu-latest'\n    steps:\n    - checkout: self\n      fetchDepth: 0  # Fetch full history for git diff\n      displayName: 'Checkout with full history'\n    \n    - script: |\n        echo \"Detecting changed DAB folders...\"\n        \n        # Get the target branch for comparison (main or master)\n        TARGET_BRANCH=\"origin/main\"\n        if ! git show-ref --verify --quiet refs/remotes/origin/main; then\n          TARGET_BRANCH=\"origin/master\"\n        fi\n        \n        echo \"Comparing against: $TARGET_BRANCH\"\n        \n        # Determine the correct comparison point based on commit type\n        echo \"Current HEAD: $(git rev-parse HEAD)\"\n        \n        # Check if current commit is a merge commit\n        if git rev-parse --verify HEAD^2 \u003e/dev/null 2\u003e\u00261; then\n          # This is a merge commit, compare against first parent (previous state of target branch)\n          COMPARE_AGAINST=\"HEAD^1\"\n          echo \"Merge commit detected, comparing against first parent: $(git rev-parse HEAD^1)\"\n        else\n          # Regular commit, compare against previous commit\n          COMPARE_AGAINST=\"HEAD~1\"\n          echo \"Regular commit, comparing against previous commit: $(git rev-parse HEAD~1)\"\n        fi\n        \n        echo \"Comparing changes from $COMPARE_AGAINST to HEAD\"\n        \n        # Find all folders in all root directories that have a databricks.yml file\n        ALL_DABS=$(find . -maxdepth 7 -name \"databricks.yml\" -type f | sed 's|/databricks.yml||' | sed 's|^\\./||' | sort)\n        echo \"All DAB folders found:\"\n        echo \"$ALL_DABS\"\n        \n        # Find changed DAB folders and create list\n        CHANGED_DABS_LIST=\"\"\n        CHANGED_COUNT=0\n        \n        for dab_folder in $ALL_DABS; do\n          # Check if any files in this DAB folder have changed\n          CHANGES=$(git diff --name-only $COMPARE_AGAINST HEAD -- \"$dab_folder/\" | wc -l)\n          if [ $CHANGES -gt 0 ]; then\n            echo \"Changes detected in: $dab_folder ($CHANGES files changed)\"\n            echo \"  Changed files:\"\n            git diff --name-only $COMPARE_AGAINST HEAD -- \"$dab_folder/\" | sed 's/^/    /'\n            CHANGED_COUNT=$((CHANGED_COUNT + 1))\n            \n            if [ -z \"$CHANGED_DABS_LIST\" ]; then\n              CHANGED_DABS_LIST=\"$dab_folder\"\n            else\n              CHANGED_DABS_LIST=\"$CHANGED_DABS_LIST,$dab_folder\"\n            fi\n          else\n            echo \"No changes in: $dab_folder\"\n          fi\n        done\n        \n        if [ $CHANGED_COUNT -eq 0 ]; then\n          echo \"No DAB folders have changes\"\n          echo \"##vso[task.setvariable variable=CHANGED_DABS;isOutput=true]\"\n          echo \"##vso[task.setvariable variable=HAS_CHANGES;isOutput=true]false\"\n          echo \"##vso[task.setvariable variable=CHANGED_COUNT;isOutput=true]0\"\n        else\n          echo \"\"\n          echo \"=========================================\"\n          echo \"SUMMARY: $CHANGED_COUNT DAB(s) with changes\"\n          echo \"=========================================\"\n          echo \"$CHANGED_DABS_LIST\" | tr ',' '\\n' | nl -w2 -s'. '\n          echo \"=========================================\"\n          echo \"\"\n          echo \"##vso[task.setvariable variable=CHANGED_DABS;isOutput=true]$CHANGED_DABS_LIST\"\n          echo \"##vso[task.setvariable variable=HAS_CHANGES;isOutput=true]true\"\n          echo \"##vso[task.setvariable variable=CHANGED_COUNT;isOutput=true]$CHANGED_COUNT\"\n        fi\n      name: detectChanges\n      displayName: 'Detect changed DAB folders'\n\n# Stage 2: Deploy changed DABs sequentially (push to dev/test/main only)\n- stage: DeployChangedDABs\n  condition: ne(variables['Build.Reason'], 'PullRequest')\n  dependsOn: DetectChanges\n  jobs:\n  - job: DeployDABsSequentially\n    pool:\n      vmImage: 'ubuntu-latest'\n    timeoutInMinutes: 120  # Increase timeout for multiple DABs\n    variables:\n      changed_dabs: $[ stageDependencies.DetectChanges.DetectChangedDABs.outputs['detectChanges.CHANGED_DABS'] ]\n      changed_count: $[ stageDependencies.DetectChanges.DetectChangedDABs.outputs['detectChanges.CHANGED_COUNT'] ]\n    \n    steps:\n    - script: |\n        echo \"Job started successfully!\"\n        echo \"changed_dabs value: '$(changed_dabs)'\"\n        echo \"changed_count value: '$(changed_count)'\"\n        echo \"=== ENVIRONMENT DEBUG ===\"\n        echo \"Build.Reason: $(Build.Reason)\"\n        echo \"Build.SourceBranchName: $(Build.SourceBranchName)\"\n        echo \"System.PullRequest.TargetBranch: $(System.PullRequest.TargetBranch)\"\n        echo \"env variable: $(env)\"\n        echo \"DATABRICKS_HOST: $(DATABRICKS_HOST)\"\n        echo \"SERVICE_CONNECTION_NAME: $(SERVICE_CONNECTION_NAME)\"\n        echo \"==========================\"\n      displayName: 'Job Start Confirmation and Debug Info'\n    \n    - script: |\n        # Enhanced check for changes with better logging\n        CHANGED_COUNT=\"$(changed_count)\"\n        CHANGED_DABS=\"$(changed_dabs)\"\n        \n        echo \"=== DEPLOYMENT CHECK ===\"\n        echo \"Changed count from job variable: '$CHANGED_COUNT'\"\n        echo \"Changed DABs list: '$CHANGED_DABS'\"\n        \n        # Check if we have any changes (multiple conditions for robustness)\n        if [ -z \"$CHANGED_COUNT\" ] || [ \"$CHANGED_COUNT\" = \"0\" ] || [ \"$CHANGED_COUNT\" = \"\" ] || [ -z \"$CHANGED_DABS\" ] || [ \"$CHANGED_DABS\" = \"\" ]; then\n          echo \"\"\n          echo \"##[section]No DAB changes detected - skipping all deployment tasks\"\n          echo \"##vso[task.setvariable variable=SKIP_DEPLOYMENT;isOutput=true]true\"\n          echo \"##vso[task.complete result=Succeeded;]No changes to deploy\"\n          exit 0\n        fi\n        \n        echo \"\"\n        echo \"=== DEPLOYMENT OVERVIEW ===\"\n        echo \"Total DABs to deploy: $CHANGED_COUNT\"\n        echo \"Environment: $(env)\"\n        echo \"Databricks Host: $(DATABRICKS_HOST)\"\n        echo \"\"\n        echo \"DABs to be deployed:\"\n        echo \"$CHANGED_DABS\" | tr ',' '\\n' | nl -w2 -s'. '\n        echo \"==================================\"\n        echo \"##vso[task.setvariable variable=SKIP_DEPLOYMENT;isOutput=true]false\"\n      displayName: 'Check for changes and deployment overview'\n      name: checkChanges\n    \n    - task: UsePythonVersion@0\n      condition: ne(variables['checkChanges.SKIP_DEPLOYMENT'], 'true')\n      displayName: 'Use Python 3.10'\n      inputs:\n        versionSpec: '3.10'\n    \n    - task: AzureCLI@2\n      condition: ne(variables['checkChanges.SKIP_DEPLOYMENT'], 'true')\n      inputs:\n        azureSubscription: $(SERVICE_CONNECTION_NAME)\n        scriptType: 'bash'\n        scriptLocation: 'inlineScript'\n        inlineScript: |\n          echo \"Getting access token...\"\n          DATABRICKS_TOKEN=$(az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d --query \"accessToken\" -o tsv)\n          echo \"##vso[task.setvariable variable=DATABRICKS_TOKEN]$DATABRICKS_TOKEN\"\n      displayName: 'Get Databricks Token'\n        \n    - checkout: self\n      condition: ne(variables['checkChanges.SKIP_DEPLOYMENT'], 'true')\n      displayName: 'Checkout repository'\n\n    - script: |\n        # Install uv (faster method)\n        echo \"Installing uv...\"\n        curl -LsSf https://astral.sh/uv/install.sh | sh\n        export PATH=\"$HOME/.local/bin:$PATH\"\n        \n        # Create virtual environment and install dependencies with optimizations\n        echo \"Creating virtual environment with uv...\"\n        uv venv .venv --python $(which python)\n        \n        echo \"Installing Python dependencies with uv...\"\n        # Install dependencies with standard uv (no binary restrictions)\n        source .venv/bin/activate \u0026\u0026 \\\n        uv pip install \\\n          nutter \\\n          wheel \\\n          setuptools \\\n          pytest \\\n          pyspark\n        \n        # Make the virtual environment available for subsequent steps\n        echo \"##vso[task.setvariable variable=VIRTUAL_ENV]$(pwd)/.venv\"\n        echo \"##vso[task.setvariable variable=PATH]$(pwd)/.venv/bin:$PATH\"\n      condition: ne(variables['checkChanges.SKIP_DEPLOYMENT'], 'true')\n      displayName: 'Install Python dependencies with uv (optimized)'\n      \n    - script: |\n        echo \"Installing Databricks CLI...\"\n        curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh\n        \n        # Ensure we use the newer CLI version\n        export PATH=\"/usr/local/bin:$PATH\"\n        echo \"Using Databricks CLI at: $(which databricks)\"\n        databricks --version\n      condition: ne(variables['checkChanges.SKIP_DEPLOYMENT'], 'true')\n      displayName: 'Install Databricks CLI'\n    \n    - script: |\n        echo \"Configuring Databricks CLI...\"\n        export PATH=\"/usr/local/bin:$PATH\"\n        \n        # Test databricks auth\n        echo \"Testing databricks authentication...\"\n        databricks auth describe\n      condition: ne(variables['checkChanges.SKIP_DEPLOYMENT'], 'true')\n      env:\n        DATABRICKS_HOST: $(DATABRICKS_HOST)\n        DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)\n      displayName: 'Configure and test Databricks CLI'\n    \n    - script: |\n        echo \"Starting sequential DAB deployment...\"\n        echo \"==================================\"\n        \n        # Ensure we use the correct Databricks CLI version\n        export PATH=\"/usr/local/bin:$PATH\"\n        \n        # Split the comma-separated list of DABs\n        IFS=',' read -ra DABS_ARRAY \u003c\u003c\u003c \"$(changed_dabs)\"\n        \n        # Initialize counters\n        TOTAL_DABS=${#DABS_ARRAY[@]}\n        CURRENT_DAB=0\n        SUCCESS_COUNT=0\n        FAILED_COUNT=0\n        FAILED_DABS=\"\"\n        \n        # Process each DAB\n        for DAB_FOLDER in \"${DABS_ARRAY[@]}\"; do\n          CURRENT_DAB=$((CURRENT_DAB + 1))\n          \n          echo \"\"\n          echo \"##[section]=========================================\"\n          echo \"##[section]Processing DAB $CURRENT_DAB of $TOTAL_DABS: $DAB_FOLDER\"\n          echo \"##[section]=========================================\"\n          \n          # Validate directory exists\n          if [ ! -d \"$DAB_FOLDER\" ]; then\n            echo \"##[error]Directory $DAB_FOLDER does not exist!\"\n            echo \"[$CURRENT_DAB/$TOTAL_DABS] $DAB_FOLDER - FAILED (Directory not found)\"\n            FAILED_COUNT=$((FAILED_COUNT + 1))\n            FAILED_DABS=\"$FAILED_DABS\\n  - $DAB_FOLDER (Directory not found)\"\n            continue\n          fi\n          \n          # Change to DAB directory\n          cd \"$DAB_FOLDER\"\n          \n          # Validate databricks.yml exists\n          if [ ! -f \"databricks.yml\" ]; then\n            echo \"##[error]databricks.yml not found in $DAB_FOLDER!\"\n            echo \"[$CURRENT_DAB/$TOTAL_DABS] $DAB_FOLDER - FAILED (databricks.yml not found)\"\n            FAILED_COUNT=$((FAILED_COUNT + 1))\n            FAILED_DABS=\"$FAILED_DABS\\n  - $DAB_FOLDER (databricks.yml not found)\"\n            cd /home/vsts/work/1/s\n            continue\n          fi\n          \n          # Validate bundle\n          echo \"\"\n          echo \"##[group]Validating bundle...\"\n          echo \"Running: databricks bundle validate -t $(env)\"\n          echo \"Environment variables:\"\n          echo \"  DATABRICKS_HOST: $(DATABRICKS_HOST)\"\n          echo \"  Target environment: $(env)\"\n          echo \"  Working directory: $(pwd)\"\n          echo \"\"\n          \n          # Show databricks.yml content for debugging\n          echo \"databricks.yml content:\"\n          cat databricks.yml | head -50\n          echo \"\"\n          \n          if databricks bundle validate -t $(env); then\n            echo \"✓ Validation successful\"\n            echo \"##[endgroup]\"\n          else\n            VALIDATION_EXIT_CODE=$?\n            echo \"##[error]Validation failed for $DAB_FOLDER with exit code: $VALIDATION_EXIT_CODE\"\n            echo \"##[error]Re-running validation with maximum verbosity for debugging:\"\n            databricks bundle validate -t $(env) --debug || true\n            echo \"##[endgroup]\"\n            echo \"[$CURRENT_DAB/$TOTAL_DABS] $DAB_FOLDER - FAILED (Validation error - exit code: $VALIDATION_EXIT_CODE)\"\n            FAILED_COUNT=$((FAILED_COUNT + 1))\n            FAILED_DABS=\"$FAILED_DABS\\n  - $DAB_FOLDER (Validation error - exit code: $VALIDATION_EXIT_CODE)\"\n            cd /home/vsts/work/1/s\n            continue\n          fi\n          \n          # Deploy bundle\n          echo \"\"\n          echo \"##[group]Deploying bundle...\"\n          if databricks bundle deploy -t $(env); then\n            echo \"✓ Deployment successful\"\n            echo \"##[endgroup]\"\n            echo \"[$CURRENT_DAB/$TOTAL_DABS] $DAB_FOLDER - SUCCESS\"\n            SUCCESS_COUNT=$((SUCCESS_COUNT + 1))\n          else\n            echo \"##[error]Deployment failed for $DAB_FOLDER!\"\n            echo \"##[endgroup]\"\n            echo \"[$CURRENT_DAB/$TOTAL_DABS] $DAB_FOLDER - FAILED (Deployment error)\"\n            FAILED_COUNT=$((FAILED_COUNT + 1))\n            FAILED_DABS=\"$FAILED_DABS\\n  - $DAB_FOLDER (Deployment error)\"\n          fi\n          \n          # Return to root directory\n          cd /home/vsts/work/1/s\n          \n          echo \"\"\n          echo \"Progress: $CURRENT_DAB/$TOTAL_DABS completed (Success: $SUCCESS_COUNT, Failed: $FAILED_COUNT)\"\n          echo \"=========================================\"\n        done\n        \n        # Final summary\n        echo \"\"\n        echo \"##[section]=========================================\"\n        echo \"##[section]DEPLOYMENT COMPLETE\"\n        echo \"##[section]=========================================\"\n        echo \"Total DABs processed: $TOTAL_DABS\"\n        echo \"Successful: $SUCCESS_COUNT\"\n        echo \"Failed: $FAILED_COUNT\"\n        \n        echo \"End Time: $(date)\"\n        echo \"Total: $TOTAL_DABS | Success: $SUCCESS_COUNT | Failed: $FAILED_COUNT\"\n        \n        # Set output variables for summary stage\n        echo \"##vso[task.setvariable variable=DEPLOYMENT_SUMMARY;isOutput=true]\"\n        echo \"##vso[task.setvariable variable=SUCCESS_COUNT;isOutput=true]$SUCCESS_COUNT\"\n        echo \"##vso[task.setvariable variable=FAILED_COUNT;isOutput=true]$FAILED_COUNT\"\n        \n        # Fail the job if any DAB failed\n        if [ $FAILED_COUNT -gt 0 ]; then\n          echo \"\"\n          echo \"##[error]$FAILED_COUNT DAB(s) failed to deploy:\"\n          echo -e \"$FAILED_DABS\"\n          echo \"\"\n          echo \"##vso[task.logissue type=error]$FAILED_COUNT out of $TOTAL_DABS DAB deployments failed\"\n          exit 1\n        else\n          echo \"\"\n          echo \"##[section]All DABs deployed successfully! 🎉\"\n        fi\n      condition: ne(variables['checkChanges.SKIP_DEPLOYMENT'], 'true')\n      env:\n        DATABRICKS_HOST: $(DATABRICKS_HOST)\n        DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)\n      name: deployAll\n      displayName: 'Deploy all changed bundles sequentially'\n\n# Stage 3: Summary and notifications\n- stage: Summary\n  condition: always()\n  dependsOn: \n  - DetectChanges\n  - DeployChangedDABs\n  jobs:\n  - job: PublishResults\n    pool:\n      vmImage: 'ubuntu-latest'\n    variables:\n      has_changes: $[ stageDependencies.DetectChanges.DetectChangedDABs.outputs['detectChanges.HAS_CHANGES'] ]\n      changed_count: $[ stageDependencies.DetectChanges.DetectChangedDABs.outputs['detectChanges.CHANGED_COUNT'] ]\n      deploy_success_count: $[ stageDependencies.DeployChangedDABs.DeployDABsSequentially.outputs['deployAll.SUCCESS_COUNT'] ]\n      deploy_failed_count: $[ stageDependencies.DeployChangedDABs.DeployDABsSequentially.outputs['deployAll.FAILED_COUNT'] ]\n    steps:\n    - script: |\n        echo \"=== PIPELINE SUMMARY ===\"\n        echo \"========================\"\n        \n        if [ \"$(has_changes)\" = \"false\" ]; then\n          echo \"No DAB changes detected.\"\n        else\n          echo \"Changed DABs: $(changed_count)\"\n          \n          # Check if this was a PR or deployment\n          if [ \"$(System.PullRequest.PullRequestId)\" != \"\" ]; then\n            echo \"Pull Request - Changes detected but no deployment performed.\"\n          else\n            echo \"Deployment Results:\"\n            if [ -n \"$(deploy_success_count)\" ]; then\n              echo \"  Successfully deployed: $(deploy_success_count)\"\n            fi\n            if [ -n \"$(deploy_failed_count)\" ]; then\n              echo \"  Failed deployments: $(deploy_failed_count)\"\n            fi\n            \n            if [ -n \"$(deploy_failed_count)\" ] \u0026\u0026 [ \"$(deploy_failed_count)\" -gt 0 ]; then\n              echo \"\"\n              echo \"##vso[task.logissue type=error]Pipeline completed with $(deploy_failed_count) failed deployment(s)\"\n            fi\n          fi\n        fi\n        \n        echo \"\"\n        echo \"Check the stage logs for detailed information.\"\n      displayName: 'Pipeline Summary'\n    \n    - task: PublishTestResults@2\n      condition: succeededOrFailed()\n      inputs:\n        testResultsFormat: 'JUnit'\n        testResultsFiles: '**/test-*.xml' \n        failTaskOnFailedTests: false\n      displayName: 'Publish test results'",
            "file": "azure-pipelines.yml",
            "id": "8fa490cc-afc1-4f6b-8056-46a97f4e0b1a/azure-pipelines.yml",
            "overwrite_on_create": true,
            "repository_id": "8fa490cc-afc1-4f6b-8056-46a97f4e0b1a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azuredevops_project.project",
            "data.azuredevops_git_repository.default_repo",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_pipeline_authorization",
      "name": "dev_service_connection_auth",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "77f887a0-2f03-4f1f-b89c-bb44b71384fc",
            "pipeline_id": 7,
            "pipeline_project_id": null,
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_id": "77f887a0-2f03-4f1f-b89c-bb44b71384fc",
            "timeouts": null,
            "type": "endpoint"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azuredevops_build_definition.pipeline",
            "azuredevops_git_repository_file.azure_pipeline_yml",
            "azuredevops_project.project",
            "azuredevops_serviceendpoint_azurerm.dev_pipeline_service_connection",
            "azuredevops_variable_group.dev_variables",
            "azuredevops_variable_group.prod_variables",
            "azuredevops_variable_group.test_variables",
            "azurerm_federated_identity_credential.dev_pipeline_federated_credential",
            "azurerm_role_assignment.dev_pipeline_identity_reader",
            "azurerm_user_assigned_identity.dev_pipeline_identity",
            "data.azuredevops_git_repository.default_repo",
            "data.azurerm_client_config.current",
            "data.azurerm_resource_group.main",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_pipeline_authorization",
      "name": "dev_variables_auth",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "12",
            "pipeline_id": 7,
            "pipeline_project_id": null,
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_id": "12",
            "timeouts": null,
            "type": "variablegroup"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azuredevops_build_definition.pipeline",
            "azuredevops_git_repository_file.azure_pipeline_yml",
            "azuredevops_project.project",
            "azuredevops_variable_group.dev_variables",
            "azuredevops_variable_group.prod_variables",
            "azuredevops_variable_group.test_variables",
            "data.azuredevops_git_repository.default_repo",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_pipeline_authorization",
      "name": "prod_service_connection_auth",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ef562b05-d554-45c5-bea4-5c63f1d77048",
            "pipeline_id": 7,
            "pipeline_project_id": null,
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_id": "ef562b05-d554-45c5-bea4-5c63f1d77048",
            "timeouts": null,
            "type": "endpoint"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azuredevops_build_definition.pipeline",
            "azuredevops_git_repository_file.azure_pipeline_yml",
            "azuredevops_project.project",
            "azuredevops_serviceendpoint_azurerm.prod_pipeline_service_connection",
            "azuredevops_variable_group.dev_variables",
            "azuredevops_variable_group.prod_variables",
            "azuredevops_variable_group.test_variables",
            "azurerm_federated_identity_credential.prod_pipeline_federated_credential",
            "azurerm_role_assignment.prod_pipeline_identity_reader",
            "azurerm_user_assigned_identity.prod_pipeline_identity",
            "data.azuredevops_git_repository.default_repo",
            "data.azurerm_client_config.current",
            "data.azurerm_resource_group.main",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_pipeline_authorization",
      "name": "prod_variables_auth",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "11",
            "pipeline_id": 7,
            "pipeline_project_id": null,
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_id": "11",
            "timeouts": null,
            "type": "variablegroup"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azuredevops_build_definition.pipeline",
            "azuredevops_git_repository_file.azure_pipeline_yml",
            "azuredevops_project.project",
            "azuredevops_variable_group.dev_variables",
            "azuredevops_variable_group.prod_variables",
            "azuredevops_variable_group.test_variables",
            "data.azuredevops_git_repository.default_repo",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_pipeline_authorization",
      "name": "test_service_connection_auth",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "af93df34-87b1-41d2-ba9a-326e5536f565",
            "pipeline_id": 7,
            "pipeline_project_id": null,
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_id": "af93df34-87b1-41d2-ba9a-326e5536f565",
            "timeouts": null,
            "type": "endpoint"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azuredevops_build_definition.pipeline",
            "azuredevops_git_repository_file.azure_pipeline_yml",
            "azuredevops_project.project",
            "azuredevops_serviceendpoint_azurerm.test_pipeline_service_connection",
            "azuredevops_variable_group.dev_variables",
            "azuredevops_variable_group.prod_variables",
            "azuredevops_variable_group.test_variables",
            "azurerm_federated_identity_credential.test_pipeline_federated_credential",
            "azurerm_role_assignment.test_pipeline_identity_reader",
            "azurerm_user_assigned_identity.test_pipeline_identity",
            "data.azuredevops_git_repository.default_repo",
            "data.azurerm_client_config.current",
            "data.azurerm_resource_group.main",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_pipeline_authorization",
      "name": "test_variables_auth",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "13",
            "pipeline_id": 7,
            "pipeline_project_id": null,
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_id": "13",
            "timeouts": null,
            "type": "variablegroup"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azuredevops_build_definition.pipeline",
            "azuredevops_git_repository_file.azure_pipeline_yml",
            "azuredevops_project.project",
            "azuredevops_variable_group.dev_variables",
            "azuredevops_variable_group.prod_variables",
            "azuredevops_variable_group.test_variables",
            "data.azuredevops_git_repository.default_repo",
            "null_resource.initialize_repo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_project",
      "name": "project",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Description of your Azure DevOps project",
            "features": {
              "artifacts": "enabled",
              "boards": "enabled",
              "pipelines": "enabled",
              "repositories": "enabled",
              "testplans": "disabled"
            },
            "id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "name": "dabs-cicd-project",
            "process_template_id": "adcc42ab-9882-485e-a3ed-7678f01f66bc",
            "timeouts": null,
            "version_control": "Git",
            "visibility": "private",
            "work_item_template": "Agile"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_serviceendpoint_azurerm",
      "name": "dev_pipeline_service_connection",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "authorization": {
              "scheme": "WorkloadIdentityFederation"
            },
            "azurerm_management_group_id": null,
            "azurerm_management_group_name": null,
            "azurerm_spn_tenantid": "bf465dc7-3bc8-4944-b018-092572b5c20d",
            "azurerm_subscription_id": "edd4cc45-85c7-4aec-8bf5-648062d519bf",
            "azurerm_subscription_name": "azure-sandbox-field-eng",
            "credentials": [
              {
                "serviceprincipalcertificate": "",
                "serviceprincipalid": "4951a3d6-7a1c-42fa-8437-a99587471c96",
                "serviceprincipalkey": ""
              }
            ],
            "description": "Service connection for dabs-cicd-project dev environment using managed identity",
            "environment": "AzureCloud",
            "features": [],
            "id": "77f887a0-2f03-4f1f-b89c-bb44b71384fc",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_group": null,
            "server_url": "https://management.azure.com/",
            "service_endpoint_authentication_scheme": "WorkloadIdentityFederation",
            "service_endpoint_name": "dabs-cicd-project-Dev-Connection",
            "service_principal_id": "4951a3d6-7a1c-42fa-8437-a99587471c96",
            "timeouts": null,
            "workload_identity_federation_issuer": "https://login.microsoftonline.com/bf465dc7-3bc8-4944-b018-092572b5c20d/v2.0",
            "workload_identity_federation_subject": "/eid1/c/pub/t/x11Gv8g7REmwGAklcrXCDQ/a/rISbSSETf0KqFyZ8ppdXmA/sc/c491b849-9990-4a0f-b50c-ea73352ae55c/77f887a0-2f03-4f1f-b89c-bb44b71384fc"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "credentials"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "serviceprincipalcertificate"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "credentials"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "serviceprincipalkey"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "azuredevops_project.project",
            "azurerm_federated_identity_credential.dev_pipeline_federated_credential",
            "azurerm_role_assignment.dev_pipeline_identity_reader",
            "azurerm_user_assigned_identity.dev_pipeline_identity",
            "data.azurerm_client_config.current",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_serviceendpoint_azurerm",
      "name": "prod_pipeline_service_connection",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "authorization": {
              "scheme": "WorkloadIdentityFederation"
            },
            "azurerm_management_group_id": null,
            "azurerm_management_group_name": null,
            "azurerm_spn_tenantid": "bf465dc7-3bc8-4944-b018-092572b5c20d",
            "azurerm_subscription_id": "edd4cc45-85c7-4aec-8bf5-648062d519bf",
            "azurerm_subscription_name": "azure-sandbox-field-eng",
            "credentials": [
              {
                "serviceprincipalcertificate": "",
                "serviceprincipalid": "3a3b0407-aa73-4a46-8d3a-8e495fa9a457",
                "serviceprincipalkey": ""
              }
            ],
            "description": "Service connection for dabs-cicd-project prod environment using managed identity",
            "environment": "AzureCloud",
            "features": [],
            "id": "ef562b05-d554-45c5-bea4-5c63f1d77048",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_group": null,
            "server_url": "https://management.azure.com/",
            "service_endpoint_authentication_scheme": "WorkloadIdentityFederation",
            "service_endpoint_name": "dabs-cicd-project-Prod-Connection",
            "service_principal_id": "3a3b0407-aa73-4a46-8d3a-8e495fa9a457",
            "timeouts": null,
            "workload_identity_federation_issuer": "https://login.microsoftonline.com/bf465dc7-3bc8-4944-b018-092572b5c20d/v2.0",
            "workload_identity_federation_subject": "/eid1/c/pub/t/x11Gv8g7REmwGAklcrXCDQ/a/rISbSSETf0KqFyZ8ppdXmA/sc/c491b849-9990-4a0f-b50c-ea73352ae55c/ef562b05-d554-45c5-bea4-5c63f1d77048"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "credentials"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "serviceprincipalcertificate"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "credentials"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "serviceprincipalkey"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "azuredevops_project.project",
            "azurerm_federated_identity_credential.prod_pipeline_federated_credential",
            "azurerm_role_assignment.prod_pipeline_identity_reader",
            "azurerm_user_assigned_identity.prod_pipeline_identity",
            "data.azurerm_client_config.current",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_serviceendpoint_azurerm",
      "name": "test_pipeline_service_connection",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "authorization": {
              "scheme": "WorkloadIdentityFederation"
            },
            "azurerm_management_group_id": null,
            "azurerm_management_group_name": null,
            "azurerm_spn_tenantid": "bf465dc7-3bc8-4944-b018-092572b5c20d",
            "azurerm_subscription_id": "edd4cc45-85c7-4aec-8bf5-648062d519bf",
            "azurerm_subscription_name": "azure-sandbox-field-eng",
            "credentials": [
              {
                "serviceprincipalcertificate": "",
                "serviceprincipalid": "614b6d47-ad5b-4a31-91a6-d0a7eac2074e",
                "serviceprincipalkey": ""
              }
            ],
            "description": "Service connection for dabs-cicd-project test environment using managed identity",
            "environment": "AzureCloud",
            "features": [],
            "id": "af93df34-87b1-41d2-ba9a-326e5536f565",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "resource_group": null,
            "server_url": "https://management.azure.com/",
            "service_endpoint_authentication_scheme": "WorkloadIdentityFederation",
            "service_endpoint_name": "dabs-cicd-project-Test-Connection",
            "service_principal_id": "614b6d47-ad5b-4a31-91a6-d0a7eac2074e",
            "timeouts": null,
            "workload_identity_federation_issuer": "https://login.microsoftonline.com/bf465dc7-3bc8-4944-b018-092572b5c20d/v2.0",
            "workload_identity_federation_subject": "/eid1/c/pub/t/x11Gv8g7REmwGAklcrXCDQ/a/rISbSSETf0KqFyZ8ppdXmA/sc/c491b849-9990-4a0f-b50c-ea73352ae55c/af93df34-87b1-41d2-ba9a-326e5536f565"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "credentials"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "serviceprincipalcertificate"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "credentials"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "serviceprincipalkey"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "azuredevops_project.project",
            "azurerm_federated_identity_credential.test_pipeline_federated_credential",
            "azurerm_role_assignment.test_pipeline_identity_reader",
            "azurerm_user_assigned_identity.test_pipeline_identity",
            "data.azurerm_client_config.current",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_variable_group",
      "name": "dev_variables",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_access": false,
            "description": "Variable group for dev environment DAB deployment",
            "id": "12",
            "key_vault": [],
            "name": "DAB-CI-Pipeline-Dev-Variables",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "timeouts": null,
            "variable": [
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "DATABRICKS_HOST",
                "secret_value": "",
                "value": "https://adb-2454423661594633.13.azuredatabricks.net/"
              },
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "SERVICE_CONNECTION_NAME",
                "secret_value": "",
                "value": "dabs-cicd-project-Dev-Connection"
              },
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "env",
                "secret_value": "",
                "value": "dev"
              }
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "variable"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azuredevops_project.project"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_variable_group",
      "name": "prod_variables",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_access": false,
            "description": "Variable group for prod environment DAB deployment",
            "id": "11",
            "key_vault": [],
            "name": "DAB-CI-Pipeline-Prod-Variables",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "timeouts": null,
            "variable": [
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "DATABRICKS_HOST",
                "secret_value": "",
                "value": "https://adb-2454423661594633.13.azuredatabricks.net/"
              },
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "SERVICE_CONNECTION_NAME",
                "secret_value": "",
                "value": "dabs-cicd-project-Prod-Connection"
              },
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "env",
                "secret_value": "",
                "value": "prod"
              }
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "variable"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azuredevops_project.project"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azuredevops_variable_group",
      "name": "test_variables",
      "provider": "provider[\"registry.terraform.io/microsoft/azuredevops\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_access": false,
            "description": "Variable group for test environment DAB deployment",
            "id": "13",
            "key_vault": [],
            "name": "DAB-CI-Pipeline-Test-Variables",
            "project_id": "2d37a48f-9d08-4b47-81d0-7b8d4c675388",
            "timeouts": null,
            "variable": [
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "DATABRICKS_HOST",
                "secret_value": "",
                "value": "https://adb-2454423661594633.13.azuredatabricks.net/"
              },
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "SERVICE_CONNECTION_NAME",
                "secret_value": "",
                "value": "dabs-cicd-project-Test-Connection"
              },
              {
                "content_type": "",
                "enabled": false,
                "expires": "",
                "is_secret": false,
                "name": "env",
                "secret_value": "",
                "value": "test"
              }
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "variable"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azuredevops_project.project"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_federated_identity_credential",
      "name": "dev_pipeline_federated_credential",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "audience": [
              "api://AzureADTokenExchange"
            ],
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-dev-identity/federatedIdentityCredentials/dabs-cicd-project-dev-federated-credential",
            "issuer": "https://vstoken.dev.azure.com/c491b849-9990-4a0f-b50c-ea73352ae55c",
            "name": "dabs-cicd-project-dev-federated-credential",
            "parent_id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-dev-identity",
            "resource_group_name": "databricks-mfg-central-rg",
            "subject": "sc://zachjacobson/dabs-cicd-project/dabs-cicd-project-Dev-Connection",
            "timeouts": {
              "create": "5m",
              "delete": "5m",
              "read": null,
              "update": "5m"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_user_assigned_identity.dev_pipeline_identity",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_federated_identity_credential",
      "name": "prod_pipeline_federated_credential",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "audience": [
              "api://AzureADTokenExchange"
            ],
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-prod-identity/federatedIdentityCredentials/dabs-cicd-project-prod-federated-credential",
            "issuer": "https://vstoken.dev.azure.com/c491b849-9990-4a0f-b50c-ea73352ae55c",
            "name": "dabs-cicd-project-prod-federated-credential",
            "parent_id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-prod-identity",
            "resource_group_name": "databricks-mfg-central-rg",
            "subject": "sc://zachjacobson/dabs-cicd-project/dabs-cicd-project-Prod-Connection",
            "timeouts": {
              "create": "5m",
              "delete": "5m",
              "read": null,
              "update": "5m"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_user_assigned_identity.prod_pipeline_identity",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_federated_identity_credential",
      "name": "test_pipeline_federated_credential",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "audience": [
              "api://AzureADTokenExchange"
            ],
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-test-identity/federatedIdentityCredentials/dabs-cicd-project-test-federated-credential",
            "issuer": "https://vstoken.dev.azure.com/c491b849-9990-4a0f-b50c-ea73352ae55c",
            "name": "dabs-cicd-project-test-federated-credential",
            "parent_id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-test-identity",
            "resource_group_name": "databricks-mfg-central-rg",
            "subject": "sc://zachjacobson/dabs-cicd-project/dabs-cicd-project-Test-Connection",
            "timeouts": {
              "create": "5m",
              "delete": "5m",
              "read": null,
              "update": "5m"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_user_assigned_identity.test_pipeline_identity",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "dev_pipeline_identity_reader",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": "",
            "condition_version": "",
            "delegated_managed_identity_resource_id": "",
            "description": "",
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/providers/Microsoft.Authorization/roleAssignments/21d2c2c5-d2d6-bf47-ab5a-de37e9378bb0",
            "name": "21d2c2c5-d2d6-bf47-ab5a-de37e9378bb0",
            "principal_id": "9dc9337e-f5a9-43c8-a3d1-a53cb9354d44",
            "principal_type": "ServicePrincipal",
            "role_definition_id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "role_definition_name": "Reader",
            "scope": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf",
            "skip_service_principal_aad_check": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "azurerm_user_assigned_identity.dev_pipeline_identity",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "prod_pipeline_identity_reader",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": "",
            "condition_version": "",
            "delegated_managed_identity_resource_id": "",
            "description": "",
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/providers/Microsoft.Authorization/roleAssignments/66c1495b-a9a5-56c4-e189-f22f5ba6b887",
            "name": "66c1495b-a9a5-56c4-e189-f22f5ba6b887",
            "principal_id": "de5594d5-0c1c-4e79-b17e-67ec8cb53e6f",
            "principal_type": "ServicePrincipal",
            "role_definition_id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "role_definition_name": "Reader",
            "scope": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf",
            "skip_service_principal_aad_check": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "azurerm_user_assigned_identity.prod_pipeline_identity",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "test_pipeline_identity_reader",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": "",
            "condition_version": "",
            "delegated_managed_identity_resource_id": "",
            "description": "",
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/providers/Microsoft.Authorization/roleAssignments/4806685c-faa9-073e-4068-06e59116f82d",
            "name": "4806685c-faa9-073e-4068-06e59116f82d",
            "principal_id": "a5d59a4a-d1e6-4fa6-bc39-8847479f41da",
            "principal_type": "ServicePrincipal",
            "role_definition_id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "role_definition_name": "Reader",
            "scope": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf",
            "skip_service_principal_aad_check": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "azurerm_user_assigned_identity.test_pipeline_identity",
            "data.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_user_assigned_identity",
      "name": "dev_pipeline_identity",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_id": "4951a3d6-7a1c-42fa-8437-a99587471c96",
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-dev-identity",
            "location": "eastus2",
            "name": "dabs-cicd-project-dev-identity",
            "principal_id": "9dc9337e-f5a9-43c8-a3d1-a53cb9354d44",
            "resource_group_name": "databricks-mfg-central-rg",
            "tags": null,
            "tenant_id": "bf465dc7-3bc8-4944-b018-092572b5c20d",
            "timeouts": {
              "create": "5m",
              "delete": "5m",
              "read": null,
              "update": "5m"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.azurerm_resource_group.main"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_user_assigned_identity",
      "name": "prod_pipeline_identity",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_id": "3a3b0407-aa73-4a46-8d3a-8e495fa9a457",
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-prod-identity",
            "location": "eastus2",
            "name": "dabs-cicd-project-prod-identity",
            "principal_id": "de5594d5-0c1c-4e79-b17e-67ec8cb53e6f",
            "resource_group_name": "databricks-mfg-central-rg",
            "tags": null,
            "tenant_id": "bf465dc7-3bc8-4944-b018-092572b5c20d",
            "timeouts": {
              "create": "5m",
              "delete": "5m",
              "read": null,
              "update": "5m"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.azurerm_resource_group.main"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_user_assigned_identity",
      "name": "test_pipeline_identity",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_id": "614b6d47-ad5b-4a31-91a6-d0a7eac2074e",
            "id": "/subscriptions/edd4cc45-85c7-4aec-8bf5-648062d519bf/resourceGroups/databricks-mfg-central-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dabs-cicd-project-test-identity",
            "location": "eastus2",
            "name": "dabs-cicd-project-test-identity",
            "principal_id": "a5d59a4a-d1e6-4fa6-bc39-8847479f41da",
            "resource_group_name": "databricks-mfg-central-rg",
            "tags": null,
            "tenant_id": "bf465dc7-3bc8-4944-b018-092572b5c20d",
            "timeouts": {
              "create": "5m",
              "delete": "5m",
              "read": null,
              "update": "5m"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.azurerm_resource_group.main"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "initialize_repo",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2579643572434748592",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "azuredevops_project.project",
            "data.azuredevops_git_repository.default_repo"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "var.azure_subscription_id_prod",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.azure_subscription_id_prod",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.resource_group_name",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.resource_group_name",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.databricks_host_test",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.databricks_host_test",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.azure_subscription_id_test",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.azure_subscription_id_test",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.azure_subscription_name_dev",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.azure_subscription_name_dev",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.organization_name",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.organization_name",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.azure_subscription_id_dev",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.azure_subscription_id_dev",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.azure_subscription_name_prod",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.azure_subscription_name_prod",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.azure_subscription_name_test",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.azure_subscription_name_test",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.databricks_host_dev",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.databricks_host_dev",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.databricks_host_prod",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.databricks_host_prod",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.organization_id",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.organization_id",
          "status": "pass"
        }
      ]
    }
  ]
}
